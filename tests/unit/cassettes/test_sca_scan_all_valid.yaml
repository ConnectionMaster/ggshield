interactions:
  - request:
      body:
        '{"files": ["tests/unit/cmd/iac/__init__.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_.yaml",
        "LICENSE", "tests/functional/data/docker-leaking-in-layer/Dockerfile", "actions-unstable/secret/action.yml",
        "ggshield/core/scan/commit.py", "tests/unit/core/__init__.py", ".github/workflows/ci.yml",
        "tests/unit/cassettes/test_scan_file.yaml", "tests/functional/secret/test_scan_invalid_api_key.py",
        "ggshield/cmd/__init__.py", "ggshield/cmd/secret/scan/archive.py", "ggshield/utils/click/real_path.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2c_web_app.yaml",
        "tests/unit/cassettes/test_hmsl_check_full_hash.yaml", "scripts/perfbench/report_cmd.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_not_a_directory.yaml",
        "tests/unit/cmd/hmsl/test_fingerprint.py", "ggshield/cmd/sca/scan/prepush.py",
        "tests/unit/data/patches/merge.patch", "tests/functional/iac/test_iac_scan_ci.py",
        "tests/unit/core/scan/test_scannable.py", "tests/unit/verticals/secret/test_scan.py",
        "tests/unit/data/docset-example.jsonl", "ggshield/cmd/hmsl/hmsl_utils.py", "doc/dev/architecture.md",
        "tests/unit/cmd/test_crash_log.py", "ggshield/cmd/iac/__init__.py", "README.md",
        "ggshield/verticals/hmsl/crypto.py", "tests/functional/secret/test_scan_path.py",
        "tests/unit/verticals/hmsl/test_hmsl_client.py", "tests/functional/utils.py",
        "tests/unit/cassettes/simple_secret.yaml", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2c_web_app.yaml",
        "ggshield/core/config/__init__.py", "tests/unit/cassettes/test_sca_get_scan_all_filepaths.yaml",
        "scripts/hmsl/hashicorp_vault.py", "tests/unit/verticals/iac/output/test_iac_diff_text_output.py",
        "changelog.d/20230823_121314_corentin.garcia_hmsl_hashicorp_vault_scan.md",
        "ggshield/cmd/sca/scan/diff.py", ".importlinter", "tests/unit/cmd/iac/test_scan_prepush.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2c_web_app.yaml",
        "ggshield.egg-info/SOURCES.txt", "tests/unit/cmd/sca/test_diff.py", "changelog.d/20230818_111845_aurelien.gateau_fix_typo.md",
        "ggshield/core/constants.py", "Pipfile.lock", "tests/unit/core/scan/test_file.py",
        "ggshield/cmd/hmsl/check_secret_manager/hashicorp_vault.py", "tests/unit/data/patches/chmod_rename_modify.patch",
        ".github/workflows/perfbench.yml", "ggshield/verticals/auth/oauth.py", "ggshield/cmd/secret/scan/pypi.py",
        "ggshield/cmd/hmsl/__init__.py", "pyproject.toml", "tests/unit/cmd/test_config.py",
        "tests/unit/utils/test_os.py", "ggshield/cmd/sca/scan/prereceive.py", "ggshield/core/check_updates.py",
        "tests/functional/secret/test_scan_docker.py", "ggshield/verticals/secret/secret_scanner.py",
        "actions/sca/action.yml", "ggshield/core/client.py", "tests/unit/verticals/secret/test_scan_repo.py",
        "tests/unit/cassettes/test_iac_scan_multiple_vulnerabilities.yaml", "tests/unit/cassettes/single_delete.yaml",
        ".env.example", "ggshield/verticals/sca/output/json_handler.py", "ggshield/verticals/iac/output/iac_text_output_handler.py",
        ".gitignore", "setup.cfg", "tests/functional/iac/test_iac_scan_prepush.py",
        "tests/unit/utils/test_git_shell.py", "tests/unit/core/scan/__init__.py", "tests/unit/cassettes/test_sca_files_from_git_repo_branch_without_lock.yaml",
        "scripts/push-to-cloudsmith", "tests/unit/cassettes/single_file.yaml", "tests/unit/core/scan/snapshots/snap_test_scannable.py",
        "tests/unit/verticals/sca/test_file_selection.py", "tests/unit/verticals/hmsl/secret_manager/hashicorp_vault/__init__.py",
        "docker/entrypoint.sh", "ggshield/verticals/__init__.py", "ggshield/verticals/iac/output/iac_output_handler.py",
        "SECURITY.md", "tests/unit/cassettes/test_iac_scan_diff_no_argument.yaml", "tests/functional/hmsl/__init__.py",
        "ggshield/cmd/secret/scan/docset.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_forbidden.yaml",
        "ggshield/core/env_utils.py", "tests/unit/cmd/hmsl/__init__.py", "ggshield/verticals/secret/output/messages.py",
        "ggshield/verticals/sca/output/schemas.py", "tests/unit/request_mock.py", "ggshield.egg-info/entry_points.txt",
        "ggshield/cmd/honeytoken/__init__.py", "Dockerfile", "ggshield/core/git_hooks/ci/__init__.py",
        "tests/unit/cassettes/test_iac_scan_single_vulnerability.yaml", "ggshield/utils/__init__.py",
        "ggshield/verticals/hmsl/output.py", "ggshield/cmd/utils/common_options.py",
        "tests/unit/data/patches/chmod.patch", "changelog.d/20230825_185427_henri.hubert_fix_path.md",
        "tests/unit/cmd/iac/test_iac_scan_utils.py", "scripts/README.md", "tests/unit/cmd/test_config_migrate.py",
        "tests/unit/cassettes/test_hmsl_api_status.yaml", "tests/unit/cassettes/no_secret.yaml",
        "tests/unit/cmd/scan/test_ci.py", "ggshield/cmd/secret/scan/ci.py", ".pre-commit-config.yaml",
        ".prettierignore", "ggshield/verticals/iac/collection/iac_path_scan_collection.py",
        "ggshield/cmd/secret/ignore.py", "tests/unit/cassettes/test_files_yes.yaml",
        "tests/unit/core/test_filter.py", "ggshield/cmd/iac/scan/diff.py", "tests/unit/cmd/honeytoken/__init__.py",
        ".gitguardian.yaml", "tests/unit/verticals/secret/snapshots/snap_test_secret_scanner.py",
        "ggshield/verticals/hmsl/secret_manager/hashicorp_vault/models.py", "tests/unit/cassettes/test_hmsl_query_hash.yaml",
        "ggshield/verticals/sca/collection/collection.py", "tests/unit/data/patches/rename.patch",
        "tests/unit/core/scan/test_commit.py", "tests/unit/cassettes/test_files_verbose.yaml",
        "scripts/release", "ggshield/cmd/auth/login.py", "tests/unit/data/patches/remove.patch",
        "changelog.d/20230913_171100_aurelien.gateau_update_action_doc.md", "tests/unit/verticals/secret/output/test_json_output.py",
        "ggshield/verticals/secret/rich_secret_scanner_ui.py", "ggshield/verticals/sca/sca_scan_models.py",
        "tests/unit/verticals/iac/collection/__init__.py", "tests/unit/cmd/hmsl/check_secret_manager/__init__.py",
        "tests/unit/cmd/auth/test_login.py", "tests/unit/data/Pipfile.lock", "ggshield/core/scan/file.py",
        "tests/unit/verticals/iac/output/test_iac_json_output.py", "ggshield/core/git_hooks/ci/supported_ci.py",
        "ggshield/core/git_hooks/prepush.py", "tests/unit/core/test_url_utils.py", "ggshield/core/config/utils.py",
        "ggshield/utils/git_shell.py", "ggshield/utils/itertools.py", "tests/unit/data/patches/add_unusual.patch",
        "ggshield/verticals/secret/output/__init__.py", "tests/unit/cassettes/test_scan_file_secret.yaml",
        "ggshield/cmd/hmsl/api_status.py", "ggshield/cmd/utils/quota.py", "tests/unit/cassettes/single_move.yaml",
        "tests/unit/cmd/test_status.py", "tests/unit/cmd/sca/test_ci.py", "tests/repository.py",
        "tests/unit/data/patches/merge-with-changes.patch", "tests/unit/cassettes/test_health_check.yaml",
        "ggshield/cmd/secret/scan/precommit.py", "tests/unit/cassettes/test_iac_scan_no_vulnerabilities.yaml",
        "tests/unit/data/patches/pre-commit.patch", "tests/functional/secret/test_scan_repo.py",
        "tests/unit/cassettes/test_hmsl_check_common_secret.yaml", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2c.yaml",
        "tests/unit/verticals/secret/test_secret_scanner.py", "tests/unit/cmd/sca/test_sca_scan_utils.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2c_web_app.yaml",
        "changelog.d/20230821_113358_xavier.blanchot_fix_sca_gitlab_ci.md", "ggshield/cmd/sca/scan/__init__.py",
        "tests/unit/cassettes/one_line_and_multiline_patch.yaml", "ggshield/verticals/sca/__init__.py",
        "ggshield/cmd/secret/scan/dockerarchive.py", "tests/conftest.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2b_worker.yaml",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2b_web_app.yaml",
        "ggshield/verticals/hmsl/client.py", "ggshield/core/git_hooks/prereceive.py",
        ".github/ISSUE_TEMPLATE/feature_request.md", "tests/unit/cassettes/test_iac_scan_no_argument.yaml",
        "ggshield/cmd/utils/common_decorators.py", "ggshield/cmd/secret/scan/repo.py",
        "ggshield/core/tar_utils.py", ".github/ISSUE_TEMPLATE/bug_report.md", "ggshield/verticals/secret/repo.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_mounts_api_endpoint.yaml",
        "tests/unit/data/patches/add.patch", "tests/unit/verticals/secret/test_scan_docset.py",
        "tests/unit/cassettes/test_iac_scan_diff_valid_args.yaml", "tests/unit/core/config/test_config.py",
        "ggshield/verticals/iac/output/schemas.py", "ggshield/cmd/sca/scan/ci.py", "tests/unit/cmd/scan/test_prereceive.py",
        "tests/unit/cmd/test_log_options.py", "scripts/update-pipfile-lock/Dockerfile",
        "ggshield/cmd/hmsl/hmsl_common_options.py", "ggshield/verticals/sca/output/text_handler.py",
        "ggshield/cmd/secret/__init__.py", "ggshield.egg-info/zip-safe", "ggshield/utils/os.py",
        "tests/unit/core/test_text_utils.py", "tests/unit/cmd/hmsl/test_decrypt.py",
        "ggshield/utils/datetime.py", "ggshield/utils/click/natural_order_group.py",
        "ggshield/core/git_hooks/ci/current_and_previous_state.py", "tests/unit/cmd/honeytoken/test_honeytoken.py",
        "ggshield/core/scan/scan_mode.py", "ggshield/cmd/hmsl/check_secret_manager/__init__.py",
        "ggshield/cmd/config/config_get.py", "tests/unit/core/test_cache.py", "ggshield/cmd/auth/__init__.py",
        "tests/unit/core/scan/test_id_cache.py", "tests/unit/verticals/secret/output/test_text_output.py",
        "tests/functional/secret/test_scan_precommit.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2c.yaml",
        "tests/unit/cmd/hmsl/test_check.py", "tests/functional/data/docker-leaking-in-layer/foo.conf",
        "tests/unit/cmd/scan/test_docker.py", "tests/unit/cmd/scan/test_pypi.py", "ggshield/cmd/config/__init__.py",
        "ggshield/cmd/hmsl/check.py", "ggshield/cmd/iac/scan/iac_scan_common_options.py",
        "tests/unit/verticals/iac/__init__.py", "actions/iac/action.yml", "ggshield/verticals/sca/collection/__init__.py",
        "tests/unit/core/config/test_user_config.py", "tests/unit/verticals/iac/output/__init__.py",
        "tests/functional/secret/test_scan_commit_range.py", "tests/unit/cmd/sca/test_scan.py",
        "tests/functional/sca/test_sca_scan_diff.py", "ggshield/core/scan/__init__.py",
        "tests/unit/cmd/hmsl/test_api_status.py", "scripts/perfbench/perfbench_utils.py",
        "tests/unit/cassettes/single_add.yaml", "tests/unit/cmd/auth/test_logout.py",
        "tests/unit/cassettes/quota.yaml", "scripts/build-packages/ggshield-wrapper",
        "Pipfile", "doc/dev/dependencies.md", "ggshield/core/match_span.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2b.yaml",
        "docker/actions-sca-entrypoint.sh", "tests/unit/cmd/__init__.py", "tests/unit/cmd/auth/__init__.py",
        "tests/unit/verticals/iac/collection/test_iac_scan_collection.py", "actions-unstable/sca/action.yml",
        "tests/functional/secret/test_scan_prereceive.py", "tests/unit/core/config/test_auth_config.py",
        "scripts/perfbench/perfbench", "tests/unit/cassettes/test_directory_verbose_yes.yaml",
        "ggshield/verticals/iac/__init__.py", "ggshield/cmd/iac/scan/__init__.py", "ggshield/cmd/sca/scan/precommit.py",
        "tests/functional/secret/test_scan_pypi.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_.yaml",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2b_web_app.yaml",
        "setup.py", "tests/unit/verticals/hmsl/test_hmsl_crypto.py", "tests/unit/cassettes/test_hmsl_query_prefix.yaml",
        "ggshield/cmd/secret/scan/range.py", "ggshield/cmd/secret/scan/path.py", "tests/unit/cassettes/no_newline_before_secret.yaml",
        "ggshield/cmd/secret/scan/prepush.py", "tests/functional/secret/test_scan_prepush.py",
        "tests/unit/cassettes/test_hmsl_quota.yaml", "tests/unit/cassettes/test_sca_scan_diff_no_vuln.yaml",
        "scripts/perfbench/.gitignore", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_not_found.yaml",
        "ggshield/utils/files.py", "ggshield/cmd/iac/scan/iac_scan_utils.py", "ggshield/__main__.py",
        "tests/unit/verticals/hmsl/secret_manager/__init__.py", "ggshield/verticals/hmsl/__init__.py",
        "tests/unit/cassettes/test_scan_path_file_secret_with_validity.yaml", "ggshield/verticals/hmsl/secret_manager/hashicorp_vault/cli.py",
        "Makefile", "ggshield/verticals/secret/output/secret_json_output_handler.py",
        "tests/unit/core/config/conftest.py", "ggshield/core/scan/scannable.py", "docker/actions-iac-entrypoint.sh",
        "tests/unit/cmd/hmsl/test_quota.py", "ggshield/cmd/iac/scan/ci.py", "ggshield.egg-info/PKG-INFO",
        "tests/unit/verticals/secret/output/__init__.py", "ggshield/verticals/sca/output/__init__.py",
        "doc/dev/hmsl/hashicorp-vault.md", "ggshield/__init__.py", "ggshield/verticals/iac/output/iac_json_output_handler.py",
        "ggshield/verticals/iac/collection/__init__.py", "tests/functional/test_docker_image.py",
        "tests/unit/verticals/secret/test_scan_docker.py", "ggshield/cmd/secret/scan/secret_scan_common_options.py",
        "tests/unit/utils/test_files.py", "tests/functional/sca/test_sca_scan_all.py",
        "actions-unstable/iac/action.yml", "tests/unit/cassettes/test_sca_files_from_git_repo_with_staged_files.yaml",
        "ggshield/cmd/utils/debug_logs.py", "tests/unit/core/test_client.py", "pre-commit-config.local-example.yml",
        "ggshield/cmd/secret/scan/docker.py", "tests/functional/conftest.py", "ggshield/cmd/sca/__init__.py",
        "ggshield/core/text_utils.py", ".gitguardian.example.yml", "ggshield/verticals/secret/docker.py",
        "tests/__init__.py", "tests/unit/cassettes/test_sca_files_from_git_repo_branch_with_vuln.yaml",
        "ggshield/cmd/secret/scan/prereceive.py", "ggshield/cmd/quota.py", "ggshield/core/lines.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2c_worker.yaml",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2c_worker.yaml",
        "tests/unit/cassettes/test_scan_path_file_one_line_and_multiline_patch.yaml",
        "tests/unit/cassettes/test_sca_files_from_git_repo_branch_without_sca.yaml",
        "ggshield/cmd/sca/scan/sca_scan_utils.py", "ggshield/cmd/hmsl/decrypt.py", "ggshield/cmd/hmsl/fingerprint.py",
        "tests/unit/verticals/__init__.py", "tests/unit/verticals/hmsl/__init__.py",
        "ggshield/core/__init__.py", "tests/unit/cassettes/test_hmsl_check_random_secret.yaml",
        "ggshield/core/git_hooks/__init__.py", "ggshield/verticals/iac/collection/iac_diff_scan_collection.py",
        "tests/functional/iac/test_iac_scan_prereceive.py", "tests/unit/cmd/test_install.py",
        "tests/unit/cmd/scan/test_repo.py", ".github/workflows/tag.yml", "tests/unit/cmd/snapshots/__init__.py",
        "tests/unit/cassettes/test_directory_yes.yaml", "tests/unit/verticals/secret/output/snapshots/__init__.py",
        "ggshield/core/config/user_config.py", "ggshield/verticals/secret/output/secret_text_output_handler.py",
        "ggshield.egg-info/requires.txt", "tests/functional/data/docker-leaking-in-env/Dockerfile",
        "tests/unit/data/patches/add_two_files.patch", "tests/unit/core/test_check_updates.py",
        "ggshield/cmd/config/config_set.py", "tests/unit/cassettes/test_scan_file_secret-True.yaml",
        "doc/pre-receive-docker.sample", "tests/unit/verticals/hmsl/secret_manager/hashicorp_vault/test_api_client.py",
        "tests/unit/cmd/sca/__init__.py", "tests/unit/cassettes/test_sca_scan_pre_commit_all.yaml",
        "ggshield/verticals/hmsl/collection.py", "tests/unit/core/test_env_utils.py",
        "ggshield/verticals/secret/output/secret_output_handler.py", "tests/unit/core/config/test_utils.py",
        "tests/functional/hmsl/test_cli_help_order.py", "ggshield/cmd/hmsl/quota.py",
        "tests/unit/verticals/secret/output/test_gitlab_webui_output.py", "tests/unit/core/scan/snapshots/__init__.py",
        "ggshield/cmd/iac/scan/precommit.py", "ggshield/verticals/hmsl/secret_manager/__init__.py",
        "tests/unit/conftest.py", "tests/functional/sca/test_sca_scan_ci.py", "tests/unit/verticals/sca/test_client.py",
        "tests/unit/cmd/sca/test_scan_prereceive.py", "ggshield/utils/click/__init__.py",
        "ggshield/core/dirs.py", "CHANGELOG.md", "ggshield/cmd/sca/scan/all.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2b.yaml",
        "tests/functional/sca/test_sca_scan_prereceive.py", "ggshield/cmd/config/config_unset.py",
        "tests/unit/core/test_match_span.py", "tests/unit/data/patches/type-change.patch",
        "tests/unit/cmd/sca/test_precommit.py", "ggshield/core/types.py", "scripts/update-pipfile-lock/update-pipfile-lock",
        "tests/unit/cmd/test_ignore.py", "tests/unit/cmd/utils.py", "tests/unit/cassettes/test_iac_scan_empty_directory.yaml",
        "tests/unit/cmd/sca/test_scan_prepush.py", "tests/functional/secret/test_scan_archive.py",
        "ggshield/core/git_hooks/ci/commit_range.py", "tests/unit/cassettes/multiple_secrets.yaml",
        "ggshield/cmd/utils/__init__.py", "scripts/perfbench/setup_cmd.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_v1_b2b_web_app_prod_config.env.yaml",
        "tests/functional/sca/test_sca_scan_prepush.py", "tests/functional/iac/test_iac_scan_precommit.py",
        "scripts/build-packages/build-packages", "tests/unit/cmd/iac/test_scan_diff.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2b_web_app.yaml",
        "scripts/perfbench/run_cmd.py", "ggshield/verticals/secret/output/secret_gitlab_webui_output_handler.py",
        "ggshield/core/config/auth_config.py", "tests/unit/core/test_lines.py", "tests/unit/cassettes/test_iac_scan_all_exit_zero.yaml",
        "tests/unit/cmd/hmsl/check_secret_manager/test_hashicorp_vault.py", "doc/pre-receive.sample",
        "tests/unit/cassettes/test_iac_scan_prepush_output_diff.yaml", "ggshield/core/scan/scan_context.py",
        "ggshield/cmd/install.py", "ggshield/verticals/hmsl/utils.py", "ggshield/verticals/iac/output/__init__.py",
        "tests/unit/core/config/__init__.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2b.yaml",
        "ggshield/core/url_utils.py", "actions-unstable/README.md", "tests/unit/cassettes/test_files_verbose_yes.yaml",
        "tests/unit/cassettes/test_iac_scan_prepush_no_iac_changes_all.yaml", "scripts/check-import-linter-config.sh",
        "tests/unit/cmd/iac/test_scan_common.py", "ggshield/verticals/iac/filter.py",
        "tests/unit/data/patches/modify.patch", "ggshield/verticals/hmsl/secret_manager/hashicorp_vault/exceptions.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2__b2c.yaml",
        "ggshield/core/cache.py", "tests/unit/cassettes/test_honeytoken_create_ok_no_name.yaml",
        "tests/unit/cassettes/test_sca_client_scan_diff.yaml", "doc/dev/getting-started.md",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_v1_b2b_worker_config.env.yaml",
        "tests/unit/cassettes/test_iac_scan_diff_exit_zero.yaml", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_forbidden.yaml",
        "tests/unit/cassettes/test_directory_verbose.yaml", "ggshield/verticals/sca/file_selection.py",
        "docker/actions-secret-entrypoint.sh", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_v2_b2b_worker_config.env.yaml",
        "tests/functional/iac/test_iac_scan_all.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2b_worker.yaml",
        "ggshield/utils/click/default_command_group.py", "ggshield/cmd/secret/scan/__init__.py",
        "ggshield/cmd/honeytoken/create.py", "tests/unit/cmd/iac/test_scan_all.py",
        "tests/unit/cmd/scan/__init__.py", "ggshield/verticals/secret/__init__.py",
        "ggshield/verticals/sca/client.py", "ggshield/cmd/iac/scan/all.py", ".cache_ggshield",
        "doc/dev/error-handling.md", "ggshield/cmd/sca/scan/scan_common_options.py",
        "ggshield/core/errors.py", "tests/unit/verticals/iac/output/test_iac_diff_json_output.py",
        "tests/unit/verticals/auth/test_oauth.py", "ggshield/verticals/auth/__init__.py",
        "tests/unit/cassettes/test_iac_scan_prepush_output_all.yaml", "ggshield/utils/_binary_extensions.py",
        "ggshield/cmd/hmsl/query.py", "changelog.d/20230911_135935_mathieu.dupuy_python_requires_3_8.md",
        "ggshield/cmd/iac/scan/prepush.py", "tests/unit/data/patches/create-test-patches",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2c_worker.yaml",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2c_worker.yaml",
        "ggshield.egg-info/top_level.txt", ".github/workflows/changelog-check.yml",
        "scripts/run-functional-tests", "tests/unit/cassettes/test_iac_scan_exit_zero.yaml",
        "tests/unit/verticals/secret/snapshots/__init__.py", "tests/unit/cassettes/test_sca_scan_diff_vuln.yaml",
        "changelog.d/README.md", "tests/unit/verticals/secret/output/snapshots/snap_test_text_output.py",
        "scripts/build-packages/nfpm.yaml.tmpl", "ggshield/core/scan/id_cache.py", "tests/unit/utils/__init__.py",
        ".env", "ggshield/verticals/hmsl/secret_manager/hashicorp_vault/api_client.py",
        "tests/unit/cmd/scan/test_path.py", "tests/unit/cassettes/test_iac_scan_multiple_files.yaml",
        "tests/unit/__init__.py", "ggshield/core/filter.py", "ggshield/cmd/config/constants.py",
        "tests/functional/secret/test_scan_docset.py", "ggshield/verticals/secret/output/schemas.py",
        "ggshield/verticals/sca/output/handler.py", ".prettierrc.yaml", "actions/secret/action.yml",
        "tests/unit/verticals/secret/__init__.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2b_worker.yaml",
        "ggshield/core/git_hooks/ci/previous_commit.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1_b2b_worker.yaml",
        "ggshield/cmd/auth/logout.py", "scripts/generate-import-linter-config.py", ".pre-commit-hooks.yaml",
        "ggshield/cmd/config/config_list.py", "tests/unit/verticals/hmsl/test_hmsl_utils.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2b.yaml",
        "ggshield/cmd/iac/scan/prereceive.py", "tests/unit/cmd/scan/test_prepush.py",
        "tests/functional/iac/test_iac_scan_diff.py", "tests/unit/verticals/hmsl/secret_manager/hashicorp_vault/test_cli.py",
        "ggshield/cmd/status.py", "CONTRIBUTING.md", "ggshield/cmd/config/config_migrate.py",
        "ggshield/verticals/iac/collection/iac_scan_collection.py", "ggshield.egg-info/dependency_links.txt",
        "tests/unit/verticals/iac/test_filter.py", "tests/unit/verticals/iac/output/test_iac_text_output.py",
        "tests/unit/cassettes/test_scan_file_secret_with_validity.yaml", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_get_kv_secrets_v2_b2b_web_app_prod_config.env.yaml",
        "ggshield/verticals/hmsl/secret_manager/hashicorp_vault/__init__.py", "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v2_b2c.yaml",
        ".dockerignore", "tests/unit/cmd/hmsl/test_query.py", "ggshield/core/config/config.py",
        "tests/unit/cassettes/test_hmsl_secret_manager_hashicorp_vault_list_kv_items_v1__b2b_web_app.yaml",
        "tests/unit/cassettes/test_scan_file_secret-False.yaml", "ggshield/verticals/secret/secret_scan_collection.py"]}'
      headers:
        Accept:
          - '*/*'
        Accept-Encoding:
          - gzip, deflate
        Connection:
          - keep-alive
        Content-Length:
          - '22635'
        Content-Type:
          - application/json
        User-Agent:
          - pygitguardian/1.10.0 (Linux;py3.10.13)
      method: POST
      uri: https://api.gitguardian.com/v1/sca/compute_sca_files/
    response:
      body:
        string: '{"sca_files":["Pipfile.lock","pyproject.toml","setup.cfg","tests/unit/data/Pipfile.lock","Pipfile","setup.py"],"potential_siblings":[]}'
      headers:
        access-control-expose-headers:
          - X-App-Version
        allow:
          - POST, OPTIONS
        content-length:
          - '135'
        content-type:
          - application/json
        cross-origin-opener-policy:
          - same-origin
        date:
          - Tue, 26 Sep 2023 13:21:30 GMT
        referrer-policy:
          - strict-origin-when-cross-origin
        server:
          - istio-envoy
        strict-transport-security:
          - max-age=31536000; includeSubDomains
        vary:
          - Cookie
        x-app-version:
          - v2.39.1
        x-content-type-options:
          - nosniff
          - nosniff
        x-envoy-upstream-service-time:
          - '34'
        x-frame-options:
          - DENY
          - SAMEORIGIN
        x-sca-engine-version:
          - 1.17.0
        x-secrets-engine-version:
          - 2.97.0
        x-xss-protection:
          - 1; mode=block
      status:
        code: 200
        message: OK
  - request:
      body: !!binary |
        LS1lNjI3MWUyMjY5OWVlY2FhZWU1OGVkMTA5MjBjZGRkMA0KQ29udGVudC1EaXNwb3NpdGlvbjog
        Zm9ybS1kYXRhOyBuYW1lPSJzY2FuX3BhcmFtZXRlcnMiDQoNCnsibWluaW11bV9zZXZlcml0eSI6
        ICJMT1ciLCAiaWdub3JlZF92dWxuZXJhYmlsaXRpZXMiOiBbXX0NCi0tZTYyNzFlMjI2OTllZWNh
        YWVlNThlZDEwOTIwY2RkZDANCkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0i
        ZGlyZWN0b3J5IjsgZmlsZW5hbWU9ImRpcmVjdG9yeSINCg0KH4sIANraEmUC/+y9S7Nfx3XlqbE/
        hUITT0pwvh+OckcPe1jzjgpHPnaSsEACBYC22B313fu3Dh1lkdJNFq9FV3Q3QIkAL+49/3Py7Mda
        mXuv/ebv3vzd//5fxh//DxvbPv7mV/nlfvj10u/OxfRvf9bXvQs+/Oa3f/zNf8Cv7z59Hh/5+N/8
        //NXaL/95vPbb+wffOm5xth8fJN6SjHnv/nNl1//n//1X95+OG/f2Zt379cffq3PkFOX8vi4r9n/
        6e/4vvfexd/4lF3KObmS8f/ia/3Nb91/pP//cfzzW/s4341v19fvP//59/3c3/+/9Nf//Te/5dfv
        /vEb+zx+9/e//eE/ny99PT59/aOvPF/99PUIufD130W3QujlJF+nW+2kOvpx0XruPvrZz9rFhpUd
        /M415Z3DaL1F53ubp6zf/Y8L//f/9G+f+uEHe/z9pw+2+JTyJ3/10f7bd28/2ifd1J/+yKf3331c
        z5f/zx/d64/v/PnWb8c3pnv/8P2Ht7/7T3/+9999fKe//vrz5w+f/v7v/k7f9ub9x6/+7tPbbz68
        s7/0E/9sH9+e7//x0yf94OeP39mPvuW//4//+q9/8ydP+rttZ3z37vOPF3x8+LDffvz052uuN/EX
        nu9P3sff1503blNnmH6OFnxJtfgyTiqjpr79KjnW5PZ2OySfvXPHQrFQx9m8wr/0aP966dGS34OX
        OXuPvnE5P30pY09XzXez6keoCf+10kKsM5Xs1vAu5zF9aL/70ZX/648/SOv36e37b7Xq//AP/k16
        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
        np0P3uX3T/kMN/osTz85Of7+4hdv//GLF9/8SKOqv17V21fv/c5zffvtnRyK4p8/0Srkunz442E8
        PYb85kWd+ugvzl5f6VVcwL77vXapx1RfjtPrcXVc4e0TeXH8Hm8lgPb0r+t+c3td2+3roc9+v9/4
        9Gye/OP//7vfvPjb//ibv/1/f/v3f/fp/bevdLnX9dOTi8uT4+L3372uZzfj5O8vb3/7+up8YDw9
        +m+ury/f/rje3Izr25P/p57fDN3U5euz2/du8xf61qxn5y/uLoQumDnbEw3mVy9en93cnF281Hdu
        r+/G9+/p7uLzJzeXd9dtHFc7ff/Sxww6Lv3NZDj8mz9/cnbxblL+/qkm5Kuzcd6/fdkhm//5k29n
        99PzMw1uPf/05N2Ln794oSl1++KFrvnpyYt3APnFi6dP5uX168oHePq6P33yur94dSCmF+fjy3HO
        t4WNzy4YjBf3QJvv/dXJ376qFy/H+eXLp/860+lH/PcR/32D/5Jz2bhTX7J3IX3Ef38BX4cjw2mb
        Lz/ge/wA/sNY5x7/heC3GH4GIoz2I/77SfCfgEFFg//zJxf1NanzXS58L1HW29vrb5Pk6Xt58Um9
        E64g1/3d2e3f3dXrflYv3n7zxXit1K8f3dxdAVH+Wujw5duXKNW/fqIfX9zqf+Of/v75WRtKpfru
        f/7tPz7pg8x9oDx959fjVmzl5Ga06yFENK8vX5/U8/OTe7Rwc3J34Ir3rvbzm5NdIObi5skX481X
        l9dd4OjYu2rnZ8d/+/hSV7u8ujn+9fbCz/rxPnrPd9+9uz67ffPsMC85vvXe3Ty5u+Y+X93eXt18
        +vy5fvLqbucWn7/3OZ5/M7DnlxcvX3z3rsB+n57819/8za//829OX3//JS/apYDXxe2L2zdXjMvt
        +Pr2OTijX3518aSdC4adTc3Pd/f2a1DJ5RVw7eQfbuvt3c3Jp5+ehJNnJ7+7vux3x4091w/283G8
        /rdcvY9+8jd3/WxcCHbp5W8voqs+/JrfXPST/0+o5+b5r8fNF7eXV8dL/17vKGB18p8Efu4E6O5f
        +fL87ObV8fP/9PYB69v/5R9+e/I3V4K/X+rK+ree+LsfHy/9zcWXZ9eXF8ed6Md/K3B++fZD61Ze
        XtfXr3ng77/TPeb/E17C39yf+rrT/Ce/svzJrzTbn/5Sc7z0v+h5iKPohf/w5uZ2vL4fQz2cPq54
        PBe3x8v+8fLqrPGzf3g7c4WCv2FKb4kMxlxn1wdZ+NVn3N+ViIfe+eaYkBf90yf/6+zqxU2dzLh/
        BKdrFd1qsb33m8eb1aurfnZ986vPzKk/9Z/80pyG0/sba6/qtVLMswvQ8/nZ/xrXvJM53T75pcMm
        6N1CbF/86rN8aj75ZT6199+7fnN1y6BcvXrzq8+8fuPUffJLj/T4/S9p8t+80jXPL786Lpnvr2nK
        939+eIwca4Q3CaeZt4lvX3dJsDo/27mI5RM4VLqPH129eW+Nc3No93N3xnzziv/x1e2vPrNc7ZNf
        2tP0zfcZ4Gf9Uivmy1+hyXbcsv5rv3nFm/r6/Ff3vmmf/DKe3j/dd15pv3prAMZF3bvfuT5rr/Qx
        rG5Bv2KOd33HeV68fXYvuNd3j+ubR3767sme8lw//5a9H9c9uNq3fzv9xXu/qPl0/ebF1aUitSZO
        u199L+7j0s172eKz97IDcf3Fi0/5j640z+sXI0POjk2E/3mnQeE3++Ud0ed1/frZd3cXjNVdvdSM
        Ydr9xm7uk5P/Fjb33pbDL37x/Jutgedw7k9ODlL4ycmxg/ARuH7kfx/53z9j/9/YnJP9uIz+Ar7u
        9+nuLs5un5M5nv/u7Aosenp+2b74qfb/k4nf3f/X6hcl/Mj/foKv+77Upy+ggd9pUz1aVL/fuHpf
        qUBFABbyMyFhSFtJ6qFQ2l59wh91TFzRQqBkxHWzjdSpXXLYuWKU7Ov+x9tlr+7n37Obq9H0LvGf
        +MgCOvlQ3/GRu2d+32um/d/fr7OA4j5g1fLODYgfvyNyvOz08vrl85szNr//2G+ICZ/NNy9ubvjF
        Yy/7/R//n2/+9fmT9+70aR+z3p1/V4v3aRvXtyJxj2sWnlsPsTc6hvSXqbGuLqLzhc+398EM02Lw
        uSFrWntuKOLHMgtKkG1V79JiO7q60fCKZcxWzcT2e45ube69mODoDEaewTdnfEPDeG625K3RtfQh
        bYcxtBMcTg84wIgsX//LjOeHvGkkns3245Ti/OvAf+77+M98xH8/Cf5L38d/PvP1Ef79JXy9xXsf
        9D1+uP7jffzH+g/Wf8R/P83+/+/v4dPn3+z/34Ojt1vaD0KhJ98Cn28P8d/tMn3+5K9Ofn15aKrU
        3k/e7Uy2s3Fz8mpcD/Zpbk/Oz25uT25fjdcIr+i/J/dnUVdvTthmVD568m5PSe/wv09GPzv2q9++
        3Scn1FTwEU+fKvc9+X0fXz779gMcRRT8VBjhrSXsu+oCvvuLp0/u96W+8497e/fvfuub/Sq+d3bV
        97d/vboeOPvcFyUc3zhKUu7fMpGhn5781cnV2cUFe7X7aPXuZpxczhPM48/P2rGF+52R+epM9zO+
        buPYent5fXl39faiz15f3t/MN2/z7EbfGd9962ffGt69/f73LOvfff894+q33/qe+ei7Oz4qT9ih
        u70vadD3nhwuj/zjV/eehp/8u+O/5pNf+lPPUOv5/04P9a255sndxe3Z+R87HvlifHl2gdLJ8+OS
        z89ubu7GzfOY88nZzck8+3p0Xeq/vRoXJ28u706ux2s9Q82Vs5tPTvrlxc9vT+YlJUsnt5cn9fzm
        8ttXjG/e/BUT4exC1zm9f+fnX11efzHPL796zg7l6ZvX50/evVa39Eurj3/1Zurhz5v7ewz3hvZH
        /cgxFd8rIfnF00/0zG6v69vqnsvX508/13x8W5NyPx0wLHHG/WssAfm4//dx/+9j/e9f7te7nPsv
        iP+2zad/Uv8bvEsf8d9P8XXUTxyT4KhsOLnP9/ffefLkyfHff/8fPoaCj18fvz5+ffz6+PXx6+PX
        x6+PXx+/Pn59/Pr49fHr49fHr49fH7/+LX79X98niO4A4AEADQotLWU2MjcxZTIyNjk5ZWVjYWFl
        ZTU4ZWQxMDkyMGNkZGQwLS0NCg==
      headers:
        Accept:
          - '*/*'
        Accept-Encoding:
          - gzip, deflate
        Connection:
          - keep-alive
        Content-Length:
          - '40831'
        Content-Type:
          - multipart/form-data; boundary=e6271e22699eecaaee58ed10920cddd0
        GGShield-Command-Id:
          - 010eea73-8021-46b3-867b-efd9c6fbc8e9
        GGShield-Command-Path:
          - ''
        GGShield-OS-Name:
          - ubuntu
        GGShield-OS-Version:
          - '22.04'
        GGShield-Python-Version:
          - 3.10.13
        GGShield-Version:
          - 1.18.1
        User-Agent:
          - pygitguardian/1.10.0 (Linux;py3.10.13)
        mode:
          - directory
      method: POST
      uri: https://api.gitguardian.com/v1/sca/sca_scan_all/
    response:
      body:
        string:
          '{"scanned_files":["Pipfile","Pipfile.lock","pyproject.toml","setup.cfg","setup.py","tests/unit/data/Pipfile.lock"],"found_package_vulns":[{"location":"tests/unit/data/Pipfile.lock","package_vulns":[{"package_full_name":"vyper","version":"0.2.10","ecosystem":"pypi","dependency_type":null,"vulns":[{"cve_ids":["CVE-2023-42441"],"identifier":"GHSA-3hg2-r75x-g69m","severity":"medium","created_at":"2023-09-18T19:20:55Z","fixed_version":"0.3.10","summary":"Vyper
          has incorrect re-entrancy lock when key is empty string"},{"cve_ids":[],"identifier":"GHSA-22wc-c9wj-6q2v","severity":"medium","created_at":"2021-04-19T15:12:05Z","fixed_version":"0.2.12","summary":"VVE-2021-0001:
          Memory corruption using function calls within arrays"},{"cve_ids":["CVE-2023-31146"],"identifier":"GHSA-3p37-3636-q8wv","severity":"high","created_at":"2023-05-12T20:21:54Z","fixed_version":"0.3.8","summary":"Vyper
          vulnerable to OOB DynArray access when array is on both LHS and RHS of an
          assignment"},{"cve_ids":["CVE-2021-41122"],"identifier":"GHSA-c7pr-343r-5c46","severity":"medium","created_at":"2021-10-06T17:48:46Z","fixed_version":"0.3.0","summary":"missing
          clamps for decimal args in external functions"},{"cve_ids":["CVE-2022-24788"],"identifier":"GHSA-4mrx-6fxm-8jpg","severity":"high","created_at":"2022-04-20T20:31:44Z","fixed_version":"0.3.2","summary":"Buffer
          Overflow in vyper"},{"cve_ids":["CVE-2023-32058"],"identifier":"GHSA-6r8q-pfpv-7cgj","severity":"high","created_at":"2023-05-12T20:21:35Z","fixed_version":"0.3.8","summary":"Vyper
          vulnerable to integer overflow in loop"},{"cve_ids":["CVE-2023-32059"],"identifier":"GHSA-ph9x-4vc9-m39g","severity":"high","created_at":"2023-05-12T20:21:00Z","fixed_version":"0.3.8","summary":"Vyper
          vulnerable to incorrect ordering of arguments for kwargs passed to internal
          calls"},{"cve_ids":["CVE-2023-37902"],"identifier":"GHSA-f5x6-7qgp-jhf3","severity":"medium","created_at":"2023-07-25T17:46:19Z","fixed_version":"0.3.10","summary":"ecrecover
          can return undefined data if signature does not verify"},{"cve_ids":["CVE-2022-24845"],"identifier":"GHSA-j2x6-9323-fp7h","severity":"high","created_at":"2022-04-22T20:24:13Z","fixed_version":"0.3.2","summary":"Integer
          bounds error in Vyper"},{"cve_ids":["CVE-2023-30837"],"identifier":"GHSA-mgv8-gggw-mrg6","severity":"high","created_at":"2023-05-05T22:22:23Z","fixed_version":"0.3.8","summary":"vyper
          vulnerable to storage allocator overflow"},{"cve_ids":["CVE-2023-41052"],"identifier":"GHSA-4hg4-9mf5-wxxq","severity":"medium","created_at":"2023-09-04T16:39:49Z","fixed_version":"0.3.10","summary":"incorrect
          order of evaluation of side effects for some builtins"},{"cve_ids":[],"identifier":"GHSA-7vrm-3jc8-5wwm","severity":"high","created_at":"2022-04-04T21:40:45Z","fixed_version":"0.3.2","summary":"Incorrect
          Comparison in Vyper"},{"cve_ids":["CVE-2023-42443"],"identifier":"GHSA-c647-pxm2-c52w","severity":"high","created_at":"2023-09-20T23:05:35Z","fixed_version":null,"summary":"Vyper
          vulnerable to memory corruption in certain builtins utilizing `msize`"},{"cve_ids":["CVE-2022-29255"],"identifier":"GHSA-4v9q-cgpw-cf38","severity":"high","created_at":"2022-06-06T21:23:58Z","fixed_version":"0.3.4","summary":"Multiple
          evaluation of contract address in call in vyper"},{"cve_ids":["CVE-2023-32675"],"identifier":"GHSA-vxmm-cwh2-q762","severity":"low","created_at":"2023-05-22T20:35:46Z","fixed_version":"0.3.8","summary":"Vyper''s
          nonpayable default functions are sometimes payable"},{"cve_ids":["CVE-2023-40015"],"identifier":"GHSA-g2xh-c426-v8mf","severity":"medium","created_at":"2023-09-04T16:39:00Z","fixed_version":null,"summary":"Vyper:
          reversed order of side effects for some operations"},{"cve_ids":["CVE-2021-41121"],"identifier":"GHSA-xv8x-pr4h-73jv","severity":"high","created_at":"2021-10-12T15:59:29Z","fixed_version":"0.3.0","summary":"Memory
          corruption when returning a literal struct with a private call inside of it"}]},{"package_full_name":"certifi","version":"2023.5.7","ecosystem":"pypi","dependency_type":null,"vulns":[{"cve_ids":["CVE-2023-37920"],"identifier":"GHSA-xqr8-7jwr-rhp7","severity":"high","created_at":"2023-07-25T14:43:53Z","fixed_version":"2023.7.22","summary":"Removal
          of e-Tugra root certificate"}]}]}]}'
      headers:
        access-control-expose-headers:
          - X-App-Version
        allow:
          - POST, OPTIONS
        content-length:
          - '4234'
        content-type:
          - application/json
        cross-origin-opener-policy:
          - same-origin
        date:
          - Tue, 26 Sep 2023 13:21:31 GMT
        referrer-policy:
          - strict-origin-when-cross-origin
        server:
          - istio-envoy
        strict-transport-security:
          - max-age=31536000; includeSubDomains
        transfer-encoding:
          - chunked
        vary:
          - Accept-Encoding,Cookie
        x-app-version:
          - v2.39.1
        x-content-type-options:
          - nosniff
          - nosniff
        x-envoy-upstream-service-time:
          - '610'
        x-frame-options:
          - DENY
          - SAMEORIGIN
        x-sca-engine-version:
          - 1.17.0
        x-secrets-engine-version:
          - 2.97.0
        x-xss-protection:
          - 1; mode=block
      status:
        code: 200
        message: OK
version: 1
